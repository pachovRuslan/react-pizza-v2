{"ast":null,"code":"var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n\n  return ar;\n};\n\nexport default function limit(fn, timespan) {\n  var pending = false;\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (pending) return;\n    pending = true;\n    fn.apply(void 0, __spread(args));\n    setTimeout(function () {\n      pending = false;\n    }, timespan);\n  };\n}","map":{"version":3,"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","__spread","arguments","length","concat","limit","fn","timespan","pending","args","_i","apply","setTimeout"],"sources":["D:/.vscode/react-pizza-v2/node_modules/ahooks/es/useRequest/src/utils/limit.js"],"sourcesContent":["var __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n\n  return ar;\n};\n\nexport default function limit(fn, timespan) {\n  var pending = false;\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    if (pending) return;\n    pending = true;\n    fn.apply(void 0, __spread(args));\n    setTimeout(function () {\n      pending = false;\n    }, timespan);\n  };\n}"],"mappings":"AAAA,IAAIA,MAAM,GAAG,QAAQ,KAAKA,MAAb,IAAuB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;EAClD,IAAIC,CAAC,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgCH,CAAC,CAACG,MAAM,CAACC,QAAR,CAAzC;EACA,IAAI,CAACF,CAAL,EAAQ,OAAOF,CAAP;EACR,IAAIK,CAAC,GAAGH,CAAC,CAACI,IAAF,CAAON,CAAP,CAAR;EAAA,IACIO,CADJ;EAAA,IAEIC,EAAE,GAAG,EAFT;EAAA,IAGIC,CAHJ;;EAKA,IAAI;IACF,OAAO,CAACR,CAAC,KAAK,KAAK,CAAX,IAAgBA,CAAC,KAAK,CAAvB,KAA6B,CAAC,CAACM,CAAC,GAAGF,CAAC,CAACK,IAAF,EAAL,EAAeC,IAApD,EAA0D;MACxDH,EAAE,CAACI,IAAH,CAAQL,CAAC,CAACM,KAAV;IACD;EACF,CAJD,CAIE,OAAOC,KAAP,EAAc;IACdL,CAAC,GAAG;MACFK,KAAK,EAAEA;IADL,CAAJ;EAGD,CARD,SAQU;IACR,IAAI;MACF,IAAIP,CAAC,IAAI,CAACA,CAAC,CAACI,IAAR,KAAiBT,CAAC,GAAGG,CAAC,CAAC,QAAD,CAAtB,CAAJ,EAAuCH,CAAC,CAACI,IAAF,CAAOD,CAAP;IACxC,CAFD,SAEU;MACR,IAAII,CAAJ,EAAO,MAAMA,CAAC,CAACK,KAAR;IACR;EACF;;EAED,OAAON,EAAP;AACD,CAzBD;;AA2BA,IAAIO,QAAQ,GAAG,QAAQ,KAAKA,QAAb,IAAyB,YAAY;EAClD,KAAK,IAAIP,EAAE,GAAG,EAAT,EAAaH,CAAC,GAAG,CAAtB,EAAyBA,CAAC,GAAGW,SAAS,CAACC,MAAvC,EAA+CZ,CAAC,EAAhD,EAAoD;IAClDG,EAAE,GAAGA,EAAE,CAACU,MAAH,CAAUnB,MAAM,CAACiB,SAAS,CAACX,CAAD,CAAV,CAAhB,CAAL;EACD;;EAED,OAAOG,EAAP;AACD,CAND;;AAQA,eAAe,SAASW,KAAT,CAAeC,EAAf,EAAmBC,QAAnB,EAA6B;EAC1C,IAAIC,OAAO,GAAG,KAAd;EACA,OAAO,YAAY;IACjB,IAAIC,IAAI,GAAG,EAAX;;IAEA,KAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGR,SAAS,CAACC,MAAhC,EAAwCO,EAAE,EAA1C,EAA8C;MAC5CD,IAAI,CAACC,EAAD,CAAJ,GAAWR,SAAS,CAACQ,EAAD,CAApB;IACD;;IAED,IAAIF,OAAJ,EAAa;IACbA,OAAO,GAAG,IAAV;IACAF,EAAE,CAACK,KAAH,CAAS,KAAK,CAAd,EAAiBV,QAAQ,CAACQ,IAAD,CAAzB;IACAG,UAAU,CAAC,YAAY;MACrBJ,OAAO,GAAG,KAAV;IACD,CAFS,EAEPD,QAFO,CAAV;EAGD,CAbD;AAcD"},"metadata":{},"sourceType":"module"}